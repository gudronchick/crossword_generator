{"version":3,"sources":["context.js","components/Modal/StyledModal.js","components/Modal/Modal.js","components/Warning/StyledWarning.js","components/Warning/Warning.js","components/Crossword/StyledCrossword.js","components/Crossword/Crossword.js","utilities.js","App.js","reportWebVitals.js","index.js"],"names":["context","createContext","Provider","ModalWrap","styled","div","startGenerate","Modal","Input","input","Buttons","Add","button","Generate","props","useState","value","setValue","useContext","addNewWord","setStartGenerate","setWarningText","words","inputField","useRef","useEffect","current","focus","addWord","trim","length","checkWordsAmount","generateCrossword","onSubmit","e","preventDefault","type","ref","onChange","inputValue","target","match","onKeyPress","key","onClick","Warning","isModalClosed","Cross","span","warning","setWarningClosed","setIsModalClosed","t","setTimeout","clearTimeout","text","Crossword","canvas","RegenerateBtn","AutoBtn","setFieldSize","getRandomNum","w","render","setRender","autoWords","setAutoWords","fieldRef","field","getContext","crossWordsArr","clearRect","width","height","coords","x","y","crosswordWords","drawWord","word","direction","shiftX","shiftY","i","items","dir","item","start","end","crossWords","posX","posY","disX","disY","translate","forEach","split","letter","index","toLowerCase","lineWidth","beginPath","rect","stroke","font","measureText","fillText","num","Math","random","splice","createTheFirstWord","isIntersectedFunc","params","anObj","startX","endX","startY","endY","printedWords","objIndex","includes","filter","elem","printedObj","charInd","printedChar","wordInd","charLabel","createCrossword","prev","window","innerWidth","innerHeight","max","floor","throttle","func","ms","savedArgs","savedThis","isThrottled","wrapper","arguments","this","apply","App","setWords","setWarning","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12f8a094.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const context = createContext();\r\nexport const Provider = context.Provider;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ModalWrap = styled.div`\r\n  background: rgba(0, 0, 0, 0.4);\r\n  display: flex;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  animation: ${({ startGenerate }) =>\r\n    startGenerate ? \"fading .8s forwards\" : \"\"};\r\n\r\n  @keyframes fading {\r\n    0% {\r\n      background: rgba(0, 0, 0, 0.4);\r\n    }\r\n\r\n    100% {\r\n      background: rgba(0, 0, 0, 0);\r\n      visibility: hidden;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Modal = styled.div`\r\n  margin: auto;\r\n  padding: 15px;\r\n  background-color: white;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  animation: ${({ startGenerate }) =>\r\n    startGenerate ? \"bounceUp .8s ease-in forwards\" : \"\"};\r\n\r\n  @keyframes bounceUp {\r\n    100% {\r\n      visibility: hidden;\r\n      transform: scale(0);\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 500px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  position: relative;\r\n  width: 250px;\r\n  padding: 5px 5px;\r\n  border-radius: 12px;\r\n  font-size: 1.1rem;\r\n  border: 2px solid grey;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const Buttons = styled.div`\r\n  margin: 0 0 0 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    margin: 10px 0 0 0;\r\n  }\r\n`;\r\n\r\nexport const Add = styled.button`\r\n  all: unset;\r\n  text-align: center;\r\n  color: white;\r\n\r\n  border-radius: 12px;\r\n  margin-right: 10px;\r\n  padding: 6px 15px;\r\n  background: linear-gradient(to right, rgb(0, 207, 208), rgb(255, 93, 225));\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    box-shadow: inset 0 0 10px 0 grey;\r\n  }\r\n\r\n  @media screen and (max-width: 500px) {\r\n    width: 60px;\r\n  }\r\n`;\r\n\r\nexport const Generate = styled(Add)`\r\n  margin: 0;\r\n  background: linear-gradient(to right, rgb(255, 131, 80), rgb(255, 0, 202));\r\n`;\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { context } from \"../../context\";\r\nimport * as s from \"./StyledModal\";\r\n\r\nconst Modal = (props) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const { addNewWord, startGenerate, setStartGenerate, setWarningText, words } =\r\n    useContext(context);\r\n\r\n  const inputField = useRef();\r\n\r\n  useEffect(() => {\r\n    inputField.current.focus();\r\n  }, []);\r\n\r\n  const changeValue = (e) => {\r\n    const inputValue = e.target.value;\r\n    if (inputValue.match(/[0-9]/gi)?.length) {\r\n      setWarningText(\"Only alphabet letters are allowed\");\r\n      return;\r\n    }\r\n    setValue(inputValue);\r\n  };\r\n\r\n  const addWord = () => {\r\n    if (value.trim()?.length) addNewWord(value.trim());\r\n    setValue(\"\");\r\n    inputField.current.focus();\r\n  };\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    addWord();\r\n  };\r\n\r\n  const checkWordsAmount = () => {\r\n    if (words.length < 2) {\r\n      setWarningText(\"Must be at least 2 words\");\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const generateCrossword = () => {\r\n    if (checkWordsAmount()) return;\r\n    addWord();\r\n    setStartGenerate(true);\r\n  };\r\n\r\n  const generateFunc = (e) => {\r\n    if (e.key !== \" \") {\r\n      return;\r\n    } else {\r\n      e.preventDefault();\r\n    }\r\n    if (checkWordsAmount()) return;\r\n    addWord();\r\n    generateCrossword();\r\n  };\r\n\r\n  return (\r\n    <s.ModalWrap startGenerate={startGenerate}>\r\n      <s.Modal startGenerate={startGenerate}>\r\n        <form onSubmit={submitForm}>\r\n          <s.Input\r\n            type=\"text\"\r\n            ref={inputField}\r\n            onChange={changeValue}\r\n            value={value}\r\n            onKeyPress={generateFunc}\r\n          />\r\n        </form>\r\n        <s.Buttons>\r\n          <s.Add onClick={addWord}>Add</s.Add>\r\n          <s.Generate onClick={generateCrossword}>Generate</s.Generate>\r\n        </s.Buttons>\r\n      </s.Modal>\r\n    </s.ModalWrap>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Warning = styled.div`\r\n  position: absolute;\r\n  top: 10%;\r\n  left: 50%;\r\n  transform: translateX(-50%)\r\n    ${({ isModalClosed }) =>\r\n      !isModalClosed ? \"translateY(0)\" : `translateY(-100vh)`};\r\n  background-color: rgb(255, 243, 205);\r\n  padding: 10px 20px;\r\n  min-width: 250px;\r\n  text-align: center;\r\n  z-index: 9999;\r\n  font-weight: 400;\r\n  transition: 0.6s;\r\n  animation: ${({ isModalClosed }) =>\r\n    !isModalClosed ? \"warning 0.6s linear backwards\" : \"\"};\r\n\r\n  @keyframes warning {\r\n    0% {\r\n      transform: translate(-50%, -100vh);\r\n    }\r\n    80% {\r\n      transform: translate(-50%, 30px);\r\n    }\r\n    100% {\r\n      transform: translate(-50%, 0);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Cross = styled.span`\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 0;\r\n  cursor: pointer;\r\n  color: grey;\r\n  user-select: none;\r\n`;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { context } from \"../../context\";\r\nimport * as s from \"./StyledWarning\";\r\n\r\nconst Warning = () => {\r\n  const {\r\n    warning,\r\n    isModalClosed,\r\n    setWarningClosed,\r\n    setIsModalClosed,\r\n    startGenerate,\r\n  } = useContext(context);\r\n\r\n  useEffect(() => {\r\n    if (startGenerate) {\r\n      setIsModalClosed(true);\r\n      return;\r\n    }\r\n\r\n    let t;\r\n    if (!isModalClosed) {\r\n      t = setTimeout(() => {\r\n        setWarningClosed(true);\r\n      }, 1500);\r\n    }\r\n    return () => {\r\n      clearTimeout(t);\r\n    };\r\n  }, [setWarningClosed, isModalClosed, startGenerate, setIsModalClosed]);\r\n\r\n  const closeWarning = (e) => {\r\n    setIsModalClosed(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <s.Warning isModalClosed={isModalClosed}>\r\n        {warning.text}\r\n        <s.Cross onClick={closeWarning}>✖</s.Cross>\r\n      </s.Warning>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Warning;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Crossword = styled.canvas``;\r\n\r\nexport const Buttons = styled.div`\r\n  --dis: 10px;\r\n  position: absolute;\r\n  top: var(--dis);\r\n  right: var(--dis);\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: var(--dis);\r\n`;\r\n\r\nexport const RegenerateBtn = styled.button`\r\n  all: inset;\r\n  color: white;\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  border: none;\r\n  padding: 10px;\r\n  border-radius: 12px;\r\n  background: linear-gradient(to right, rgb(255, 193, 0), rgb(254, 123, 198));\r\n\r\n  &:hover {\r\n    box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nexport const AutoBtn = styled(RegenerateBtn)`\r\n  background: linear-gradient(to right, rgb(0, 207, 208), rgb(0, 135, 215));\r\n`;\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { context } from \"../../context\";\r\nimport * as s from \"./StyledCrossword\";\r\n\r\nconst Crossword = () => {\r\n  const {\r\n    setFieldSize,\r\n    getRandomNum,\r\n    words: w,\r\n    startGenerate,\r\n  } = useContext(context);\r\n\r\n  const [render, setRender] = useState(0);\r\n  const [autoWords, setAutoWords] = useState();\r\n  const fieldRef = useRef();\r\n\r\n  const regenerateFunc = (e) => {\r\n    setRender((prev) => ++prev);\r\n  };\r\n\r\n  const autoGenerateFunc = (e) => {\r\n    setAutoWords([\r\n      \"experience\",\r\n      \"exuberance\",\r\n      \"workflow\",\r\n      \"teamlead\",\r\n      \"microtask\",\r\n      \"notebook\",\r\n      \"failure\",\r\n    ]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let words = autoWords ? [...autoWords] : [...w];\r\n\r\n    const field = fieldRef.current;\r\n    setFieldSize(field);\r\n    const context = field.getContext(\"2d\");\r\n\r\n    if (!words.length || !startGenerate) return;\r\n\r\n    let crossWordsArr = [];\r\n\r\n    context.clearRect(0, 0, field.width, field.height);\r\n\r\n    const crossWords = (word, dir, x, y) => {\r\n      if (word) {\r\n        let item = {\r\n          word,\r\n          dir,\r\n          start: { x, y },\r\n          end: {\r\n            x: dir === \"hor\" ? word.length : x,\r\n            y: dir === \"vert\" ? word.length : y,\r\n          },\r\n        };\r\n        crossWordsArr = [...crossWordsArr, item];\r\n      }\r\n      return crossWordsArr;\r\n    };\r\n\r\n    const coords = {\r\n      x: null,\r\n      y: null,\r\n    };\r\n\r\n    let crosswordWords = [];\r\n\r\n    const drawCrossword = () => {\r\n      context.translate(-coords.x, -coords.y);\r\n\r\n      crosswordWords.forEach(\r\n        ({ word, direction, shiftX, shiftY, i, posX, posY }) => {\r\n          word.split(\"\").forEach((letter, index) => {\r\n            if (+i === index) letter = \"\";\r\n            direction === \"hor\" ? (shiftX += 25) : (shiftY += 25);\r\n\r\n            letter = letter.toLowerCase();\r\n            context.lineWidth = 2;\r\n            context.beginPath();\r\n            context.rect(posX + shiftX, posY + shiftY, 25, 25);\r\n            context.stroke();\r\n            context.font = \"18px sans-serif\";\r\n            const { width } = context.measureText(letter);\r\n            context.fillText(\r\n              letter,\r\n              posX + shiftX + 25 / 2 - width / 2,\r\n              posY + shiftY + 25 / 2 + 5\r\n            );\r\n          });\r\n        }\r\n      );\r\n    };\r\n\r\n    const drawWord = ({ word, direction, shiftX = 0, shiftY = 0, i }) => {\r\n      let items = crossWords(word, direction, shiftX, shiftY);\r\n      shiftX = shiftX * 25;\r\n      shiftY = shiftY * 25;\r\n      let posX = field.width / 2,\r\n        posY = field.height / 2;\r\n\r\n      let disX = posX + shiftX;\r\n      let disY = posY + shiftY;\r\n\r\n      if (!word) {\r\n        drawCrossword();\r\n        return;\r\n      }\r\n\r\n      if (disX < coords.x || coords.x === null) {\r\n        coords.x = disX;\r\n      }\r\n      if (disY < coords.y || coords.y === null) {\r\n        coords.y = disY;\r\n      }\r\n\r\n      crosswordWords = [\r\n        ...crosswordWords,\r\n        { word, direction, shiftX, shiftY, i, posX, posY },\r\n      ];\r\n\r\n      return items;\r\n    };\r\n\r\n    const createTheFirstWord = () => {\r\n      const num = getRandomNum(words.length);\r\n      const word = words[num];\r\n      drawWord({\r\n        word,\r\n        direction: Math.random() > 0.5 ? \"hor\" : \"vert\",\r\n      });\r\n      words.splice(num, 1);\r\n    };\r\n\r\n    createTheFirstWord();\r\n\r\n    const isIntersectedFunc = (params, anObj) => {\r\n      let startX = +params.shiftX;\r\n      let endX = +params.shiftX + params.word.length;\r\n      let startY = +params.shiftY;\r\n      let endY = +params.shiftY + params.word.length;\r\n\r\n      let condition =\r\n        (params.shiftY + 1 >= anObj.start.y &&\r\n          params.shiftY - 1 <= anObj.start.y &&\r\n          params.direction === \"hor\" &&\r\n          anObj.dir === \"hor\") ||\r\n        (params.shiftX - 1 <= anObj.start.x &&\r\n          params.shiftX + 1 >= anObj.start.x &&\r\n          params.direction === \"vert\" &&\r\n          anObj.dir === \"vert\") ||\r\n        (params.direction === \"hor\" &&\r\n          params.shiftY >= anObj.start.y &&\r\n          params.shiftY <= anObj.end.y &&\r\n          anObj.start.x >= startX - 1 &&\r\n          anObj.end.x <= endX + 1) ||\r\n        (params.direction === \"vert\" &&\r\n          params.shiftX >= anObj.start.x &&\r\n          params.shiftX <= anObj.end.x &&\r\n          anObj.start.y >= startY - 1 &&\r\n          anObj.end.y <= endY + 1);\r\n\r\n      return condition;\r\n    };\r\n\r\n    const createCrossword = () => {\r\n      let printedWords = [...crossWordsArr];\r\n      let item;\r\n\r\n      while (words.length) {\r\n        if (words.includes(item)) {\r\n          words = words.filter((elem) => elem !== item);\r\n        }\r\n\r\n        for (let objIndex in printedWords) {\r\n          let printedObj = printedWords[objIndex];\r\n          for (let charInd in printedObj.word) {\r\n            let printedChar = printedObj.word[charInd];\r\n            for (let wordInd in words) {\r\n              item = words[wordInd];\r\n              charLabel: for (let i in item) {\r\n                if (item[i] === printedChar) {\r\n                  let params = {\r\n                    word: item,\r\n                    direction: printedObj.dir === \"hor\" ? \"vert\" : \"hor\",\r\n                    shiftX:\r\n                      printedObj.dir === \"hor\"\r\n                        ? +charInd + printedObj.start.x + 1\r\n                        : printedObj.start.x + -i - 1,\r\n                    shiftY:\r\n                      printedObj.dir === \"hor\"\r\n                        ? printedObj.start.y + -i - 1\r\n                        : +charInd + 1 + printedObj.start.y,\r\n                    i,\r\n                  };\r\n\r\n                  for (let anObj of printedWords) {\r\n                    if (printedObj === anObj) continue;\r\n                    if (isIntersectedFunc(params, anObj)) {\r\n                      continue charLabel;\r\n                    }\r\n                  }\r\n                  printedWords = [...drawWord(params)];\r\n                  words.splice(wordInd, 1);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (!words.length) {\r\n          drawWord({});\r\n        }\r\n      }\r\n    };\r\n\r\n    createCrossword();\r\n  }, [setFieldSize, getRandomNum, w, startGenerate, render, autoWords]);\r\n\r\n  return (\r\n    <>\r\n      <s.Crossword ref={fieldRef}></s.Crossword>\r\n      {startGenerate && (\r\n        <s.Buttons>\r\n          <s.RegenerateBtn onClick={regenerateFunc}>Regenerate</s.RegenerateBtn>\r\n          <s.AutoBtn onClick={autoGenerateFunc}>Auto Create</s.AutoBtn>\r\n        </s.Buttons>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Crossword;\r\n","export const setFieldSize = (field) => {\r\n  field.width = window.innerWidth;\r\n  field.height = window.innerHeight;\r\n};\r\n\r\nexport const getRandomNum = (max) => {\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * max);\r\n};\r\n\r\nexport function throttle(func, ms) {\r\n  let isThrottled = false;\r\n  let savedArgs;\r\n  let savedThis;\r\n\r\n  function wrapper() {\r\n    if (isThrottled) {\r\n      savedArgs = arguments;\r\n      savedThis = this;\r\n      return;\r\n    }\r\n\r\n    func.apply(this, arguments);\r\n\r\n    isThrottled = true;\r\n\r\n    setTimeout(function () {\r\n      isThrottled = false;\r\n      if (savedArgs) {\r\n        wrapper.apply(savedThis, savedArgs);\r\n        savedArgs = savedThis = null;\r\n      }\r\n    }, ms);\r\n  }\r\n\r\n  return wrapper;\r\n}\r\n","import React, { useState } from \"react\";\nimport { Provider } from \"./context\";\nimport Modal from \"./components/Modal/Modal\";\nimport Warning from \"./components/Warning/Warning\";\nimport Crossword from \"./components/Crossword/Crossword\";\nimport { getRandomNum, setFieldSize, throttle } from \"./utilities\";\n\nconst App = () => {\n  const [words, setWords] = useState([]);\n\n  const [startGenerate, setStartGenerate] = useState(false);\n  const [warning, setWarning] = useState({\n    text: \"\",\n  });\n  const [isModalClosed, setIsModalClosed] = useState(true);\n\n  const setWarningClosed = (value) => {\n    setTimeout(() => {\n      setIsModalClosed(value);\n    }, 600);\n  };\n\n  const setWarningText = (text) => {\n    setWarning({ text });\n    setIsModalClosed(false);\n  };\n\n  const addNewWord = (word) => {\n    setWords((prev) => [...prev, word]);\n  };\n\n  return (\n    <Provider\n      value={{\n        words,\n        addNewWord,\n        startGenerate,\n        setStartGenerate,\n        setFieldSize,\n        getRandomNum,\n        warning,\n        setWarning,\n        isModalClosed,\n        setWarningClosed,\n        setWarningText,\n        setIsModalClosed,\n        throttle,\n      }}\n    >\n      <Warning />\n      <Modal />\n      <Crossword />\n    </Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}